#include "RabbitWanderingState.h"
#include "Graph.h"
#include "RabbitFleeingState.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Default constructor.
/// 			</summary>
///
/// <remarks>	Andrew Servania,. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

RabbitWanderingState::RabbitWanderingState()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Destructor. </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

RabbitWanderingState::~RabbitWanderingState()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Take action right after entering the state. </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
///
/// <param name="rabbit">	[in,out] If non-null, the rabbit. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void RabbitWanderingState::Enter(Rabbit* rabbit)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>
/// If the cow is chasing the rabbit and the cow is on the same spot as the rabbit.
/// the rabbit goes into a Fleeing state.
/// </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
///
/// <param name="rabbit">	[in,out] If non-null, the rabbit. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void RabbitWanderingState::Execute(Rabbit* rabbit)
{
	if (Graph::cow->GetCurrentState() == "Chase Rabbit" &&
		Graph::cow->getCurrentNode()->id == rabbit->getCurrentNode()->id)
		rabbit->GetFSM()->ChangeState(RabbitFleeingState::Instance());
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Take action right before exiting a state. </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
///
/// <param name="rabbit">	[in,out] If non-null, the rabbit. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void RabbitWanderingState::Exit(Rabbit* rabbit)
{
}